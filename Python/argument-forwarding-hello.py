#!/usr/bin/env python3
"""Showcase the forwarding of arguments to an impl function with the
same/similar arguments.

author: andreasl
"""

import inspect


def foo_impl(a, b) -> None:
    """Deeper impl."""
    print("Hello from foo_impl()!")
    print(f"{locals()=}")


def foo(cell, a, b, *args, **kwargs) -> None:
    """
    Concept of an autogenerated function with custom template stuff that uses
    `inspect`.

    Let's ignore the *args and **kwars going forward, just wanted to have them
    mentioned for completeness. we /could/ deal with them but the autogenerated
    code would hardly generate them.
    """
    print("Hello from foo()!")

    frame = inspect.currentframe()
    argvals = inspect.getargvalues(frame)
    args_ = argvals.args  # ["cell", "a", "b"]

    # note how we args_[1:] to skip over "cell"
    params = {arg: argvals.locals[arg] for arg in args_[1:]}

    foo_impl(**params)


foo("cell", 1, 2, 420, 69, x="Daffy", y="Duck")
