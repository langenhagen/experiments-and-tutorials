version: '3'
services:

  postgres:
    build: ./db/
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser"]
      interval: 6s
      timeout: 5s
      retries: 5
    networks:
      kafka-net:
        ipv4_address: 9.9.0.2
    command: ["postgres", "-c", "wal_level=logical"]  # somehow important for kafka-connect

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      kafka-net:
        ipv4_address: 9.9.0.3

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://9.9.0.4:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # this is necessary otherwise Kafka thinks of a replication factor of 3,
      # even if it it stated otherwise in the server.properties
      # might actually be a bug with Kafka
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      kafka-net:
        ipv4_address: 9.9.0.4

  kafka-connect:
    # image: confluentinc/cp-kafka-connect:latest
    build: ./connect/
    container_name: kafka-connect
    depends_on:
      - kafka
      - postgres
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
    ports:
      - "8083:8083"
    networks:
      kafka-net:
        ipv4_address: 9.9.0.5
    command: ["connect-distributed", "/etc/kafka-connect/my-config.properties"]  # there is also `connect-standalone` for simple setups
    # command: ["sleep", "999"] # Run a sleep command in order to get some time debugging stuff via docker exec -it kafka-connect /bin/bash


networks:
  kafka-net:
    driver: bridge
    ipam:
     config:
       - subnet: 9.9.0.0/16  # just a random pick that works for me
         gateway: 9.9.0.1
